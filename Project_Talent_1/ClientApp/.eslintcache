[{"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\index.js":"1","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\App.js":"2","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\registerServiceWorker.js":"3","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Layout.js":"4","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Customer.jsx":"5","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Home\\Home.jsx":"6","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Store.jsx":"7","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Product.jsx":"8","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Sale.jsx":"9","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Nav_Menu.jsx":"10","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Delete_CustomerModal.jsx":"11","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Create_CustomerModal.jsx":"12","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Edit_CustomerModal.jsx":"13","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Create_StoreModal.jsx":"14","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Delete_ProductModal.jsx":"15","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Create_ProductModal.jsx":"16","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Edit_StoreModal.jsx":"17","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Edit_ProductModal.jsx":"18","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Delete_StoreModal.jsx":"19","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Create_SaleModal.jsx":"20","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Edit_SaleModal.jsx":"21","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Delete_SaleModal.jsx":"22"},{"size":460,"mtime":1610345958000,"results":"23","hashOfConfig":"24"},{"size":841,"mtime":1610345958000,"results":"25","hashOfConfig":"24"},{"size":4013,"mtime":1610345958000,"results":"26","hashOfConfig":"24"},{"size":354,"mtime":1610345958000,"results":"27","hashOfConfig":"24"},{"size":2991,"mtime":1610345958000,"results":"28","hashOfConfig":"24"},{"size":1737,"mtime":1610345958000,"results":"29","hashOfConfig":"24"},{"size":2896,"mtime":1610345958000,"results":"30","hashOfConfig":"24"},{"size":2940,"mtime":1610345958000,"results":"31","hashOfConfig":"24"},{"size":4130,"mtime":1610345958000,"results":"32","hashOfConfig":"24"},{"size":1371,"mtime":1610345958000,"results":"33","hashOfConfig":"24"},{"size":1360,"mtime":1610345958000,"results":"34","hashOfConfig":"24"},{"size":1956,"mtime":1610345958000,"results":"35","hashOfConfig":"24"},{"size":2434,"mtime":1610345958000,"results":"36","hashOfConfig":"24"},{"size":1935,"mtime":1610345958000,"results":"37","hashOfConfig":"24"},{"size":1247,"mtime":1610345958000,"results":"38","hashOfConfig":"24"},{"size":1922,"mtime":1610345958000,"results":"39","hashOfConfig":"24"},{"size":2308,"mtime":1610345958000,"results":"40","hashOfConfig":"24"},{"size":2428,"mtime":1610345958000,"results":"41","hashOfConfig":"24"},{"size":1158,"mtime":1610345958000,"results":"42","hashOfConfig":"24"},{"size":4593,"mtime":1610345958000,"results":"43","hashOfConfig":"24"},{"size":5755,"mtime":1610345958000,"results":"44","hashOfConfig":"24"},{"size":1146,"mtime":1610345958000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1qpjrdk",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\index.js",[],["102","103","104"],"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\App.js",[],"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\registerServiceWorker.js",[],"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Layout.js",["105"],"import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport Nav_Menu from './Nav_Menu';\n\nexport class Layout extends Component {\n  static displayName = Layout.name;\n\n  render () {\n    return (\n      <div>\n        <Nav_Menu />\n        <Container>\n          {this.props.children}\n        </Container>\n      </div>\n    );\n  }\n}\n","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Customer.jsx",["106","107","108"],"import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { Table, Button, Icon } from \"semantic-ui-react\";\nimport Create_CustomerModal from \"./Create_CustomerModal\";\nimport Edit_CustomerModal from \"./Edit_CustomerModal\";\nimport Del_CustomerModal from \"./Delete_CustomerModal\";\n\nconst Customer = (props) => {\n  const [Customers, setcustomers] = useState([]);\n  const [Customer, setCustomer] = useState();\n  const [open, setopen] = useState(false);\n  const [open_Edit, setopen_Edit] = useState(false);\n  const [open_Del, setopen_Del] = useState(false);\n\n  useEffect(() => {\n    if (Customers) {\n      GetCustomers();\n    }\n  }, [Customers]);\n\n  const GetCustomers = () => {\n    Axios.get(\"/Customers/GetCustomer\")\n      .then((response) => {\n        setcustomers(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleEdit = (Customer) => {\n    setCustomer(Customer);\n    setopen_Edit(true);\n  };\n\n  const handleDelete = (Customer_edit) => {\n    setCustomer(Customer_edit);\n    setopen_Del(true);\n  };\n\n\n  return (\n    <div>\n      <Create_CustomerModal\n        open={open}\n        handelModal={(value) => setopen(value)}\n      />\n      <Edit_CustomerModal\n        open={open_Edit}\n        Customer={Customer}\n        handelModal={(value) => setopen_Edit(value)}\n      />\n      <Del_CustomerModal\n        open={open_Del}\n        Customer={Customer}\n        handelModal={(value) => setopen_Del(value)}\n      />\n\n      <h1>Customer Table</h1>\n      <Button onClick={() => setopen(true)} primary>\n        {\" \"}\n        New Customer{\" \"}\n      </Button>\n\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Address</Table.HeaderCell>\n            <Table.HeaderCell>Action</Table.HeaderCell>\n            <Table.HeaderCell>Action</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {Customers.map((c, index) => {\n            return (\n              <Table.Row>\n                <Table.Cell>{c.name}</Table.Cell>\n                <Table.Cell>{c.address}</Table.Cell>\n                <Table.Cell>\n                  <Button\n                    style={{ backgroundColor: \"olive\" }}\n                    positive\n                    onClick={() => handleEdit(c)}\n                  >\n                    <Icon name=\"edit\" />\n                    Edit\n                  </Button>\n                </Table.Cell>\n                <Table.Cell>\n                  <Button\n                    style={{ backgroundColor: \"red\" }}\n                    positive\n                    onClick={() => handleDelete(c)}\n                  >\n                    <Icon name=\"delete\" />\n                    Delete\n                  </Button>\n                </Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\nexport default Customer;\n","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Home\\Home.jsx",["109"],"import React, { Component } from \"react\";\nimport { Header, Icon, Image } from \"semantic-ui-react\";\n\nconst Home = (props) => {\n  return (\n    <div>\n      <Header as=\"h1\" icon textAlign=\"center\">\n        <Icon name=\"users\" circular />\n        <Header.Content>MVP Studios</Header.Content>\n      </Header>\n      <Image centered size=\"large\" src=\"\" />\n      <Header sub size=\"large\" style ={{ marginLeft : 20 }}>\n        Project Talent\n      </Header>\n      <div style ={{ marginLeft : 20 }}>\n        Welcome! The Talent Onboarding Task is designed to familiarise you with\n        technologies that you will be utilising once you join the project team.\n        While the instructions tell you what to do, they do not always\n        necessarily tell you how to do it. This is deliberate as it is important\n        for you to develop an independent drive to solve problems on your own.\n        You are not allowed to ask your tutors or senior interns in MVP studios\n        for help at this stage. You are allowed to discuss with other interns in\n        your intake while working on the task.\n      </div>\n      <Header sub size=\"large\" style ={{ marginLeft : 20 }}>\n        Warning\n      </Header>\n      <div style ={{ marginLeft : 20 }}>\n        Warning: There are a couple of ways to install React. If you are reading\n        other tutorials on React, then be aware that the things taught in the\n        tutorial might not be used in the onboarding task. For example, react\n        routing might not using in the onboarding task. Also, following online\n        tutorials and installing specific versions of npm packages might cause\n        conflicts between different package versions.\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Store.jsx",["110","111","112"],"import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { Table, Button, Icon } from \"semantic-ui-react\";\nimport Create_StoreModal from \"./Create_StoreModal\";\nimport Edit_StoreModal from \"./Edit_StoreModal\";\nimport Delete_StoreModal from \"./Delete_StoreModal\";\n\nconst Store = (props) => {\n  const [Stores, setStores] = useState([]);\n  const [Store, setStore] = useState();\n  const [Open_create, setOpen_create] = useState(false);\n  const [Open_Edit, setOpen_Edit] = useState(false);\n  const [Open_Del, setOpen_Del] = useState(false);\n\n  useEffect(() => {\n    if (Stores) {\n      GetStores();\n    }\n  }, [Stores]);\n\n  const GetStores = () => {\n    Axios.get(\"/Stores/GetStore\")\n      .then((response) => {\n        setStores(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleEdit = (Store) => {\n    setStore(Store);\n    setOpen_Edit(true);\n  };\n  const handleDelete = (Store) => {\n    setStore(Store);\n    setOpen_Del(true);\n  };\n\n  return (\n    <div>\n      <Create_StoreModal\n        open={Open_create}\n        handleModal={(value) => setOpen_create(value)}\n      />\n      <Edit_StoreModal\n        open={Open_Edit}\n        Store={Store}\n        handleModal={(value) => setOpen_Edit(value)}\n      />\n      <Delete_StoreModal\n        open={Open_Del}\n        Store={Store}\n        handleModal={(value) => setOpen_Del(value)}\n      />\n\n      <h1>Store Table</h1>\n      <Button primary onClick={() => setOpen_create(true)}>\n        New Store\n      </Button>\n\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>NAME</Table.HeaderCell>\n            <Table.HeaderCell>ADDRESS</Table.HeaderCell>\n            <Table.HeaderCell>Action</Table.HeaderCell>\n            <Table.HeaderCell>Action</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {Stores.map((s, index) => {\n            return (\n              <Table.Row>\n                <Table.Cell>{s.name}</Table.Cell>\n                <Table.Cell>{s.address}</Table.Cell>\n                <Table.Cell>\n                  <Button\n                    style={{ backgroundColor: \"olive\" }}\n                    positive\n                    onClick={() => handleEdit(s)}\n                  >\n                    <Icon name=\"edit\" />\n                    Edit\n                  </Button>\n                </Table.Cell>\n                <Table.Cell>\n                  <Button\n                    style={{ backgroundColor: \"red\" }}\n                    positive\n                    onClick={() => handleDelete(s)}\n                  >\n                    <Icon name=\"delete\" />\n                    Delete\n                  </Button>\n                </Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\nexport default Store;\n","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Product.jsx",["113","114","115"],"import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { Table, Button, Icon } from \"semantic-ui-react\";\nimport Create_ProductModal from \"./Create_ProductModal\";\nimport Edit_ProductModal from \"./Edit_ProductModal\";\nimport Delete_ProductModal from \"./Delete_ProductModal\";\n\nconst Product = (props) => {\n  const [Products, setProducts] = useState([]);\n  const [Product, setProduct] = useState();\n  const [open_create, setopen_create] = useState(false);\n  const [open_Edit, setopen_Edit] = useState(false);\n  const [open_Del, setopen_Del] = useState(false);\n\n  useEffect(() => {\n    if (Products) {\n      GetProducts();\n    }\n  }, [Products]);\n\n  const GetProducts = () => {\n    Axios.get(\"/Products/GetProduct\")\n      .then((response) => {\n        setProducts(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleEdit = (Product) => {\n    setProduct(Product);\n    setopen_Edit(true);\n  };\n\n  const handleDelete =(Product)=>{\n      setProduct(Product);\n      setopen_Del(true);\n\n  }\n\n  return (\n    <div>\n      <Edit_ProductModal\n        open={open_Edit}\n        Product={Product}\n        handelModal={(value) => setopen_Edit(value)}\n      />\n\n      <Create_ProductModal\n        open={open_create}\n        handelModal={(value) => setopen_create(value)}\n      />\n      <Delete_ProductModal\n        open={open_Del}\n        Product={Product}\n        handelModal={(value) => setopen_Del(value)}\n      />\n\n      <h1>Product Table</h1>\n      <Button primary onClick={() => setopen_create(true)}>\n        New Product\n      </Button>\n\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>NAME</Table.HeaderCell>\n            <Table.HeaderCell>PRICE</Table.HeaderCell>\n            <Table.HeaderCell>Action</Table.HeaderCell>\n            <Table.HeaderCell>Action</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {Products.map((p, index) => {\n            return (\n              <Table.Row>\n                <Table.Cell>{p.name}</Table.Cell>\n                <Table.Cell>{p.price}</Table.Cell>\n                <Table.Cell>\n                  <Button\n                    style={{ backgroundColor: \"olive\" }}\n                    positive\n                    onClick={() => handleEdit(p)}\n                  >\n                    <Icon name=\"edit\" />\n                    Edit\n                  </Button>\n                </Table.Cell>\n                <Table.Cell>\n                  <Button style={{ backgroundColor: \"red\" }} \n                  positive\n                  onClick={()=>handleDelete(p)}\n                  >\n                    <Icon name=\"delete\" />\n                    Delete\n                  </Button>\n                </Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\nexport default Product;\n","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Sale.jsx",["116","117","118","119","120","121","122"],"import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { Table, Button, Icon, Dropdown } from \"semantic-ui-react\";\nimport Create_SalesModal from \"./Create_SaleModal\";\nimport Delete_SaleModal from \"./Delete_SaleModal\";\nimport Edit_SaleModal from \"./Edit_SaleModal\";\nimport dateFormat from 'dateformat';\n\nconst Sale = (props) => {\n  const [Sales, setSales] = useState([]);\n  const [Sale, setSale] = useState();\n  const [Open_Create, setOpen_Create] = useState(false);\n  const [Open_Delete, setOpen_Delete] = useState(false);\n  const [Open_Edit, setOpen_Edit] = useState(false);\n\n  const [Customers, setCustomers] = useState([]);\n  const [Products, setProducts] = useState([]);\n  const [Store, setStore] = useState([]);\n\n  useEffect(() => {\n    if (Customers) {\n      \n      GetCustomers();\n      GetProducts();\n      GetStores();\n      GetSales();\n    }\n  }, [Customers]);\n\n  const GetSales = () => {\n    Axios.get(\"/Sales/GetSales\").then((response) => {\n      setSales(response.data);      \n    });\n  };\n\n  const GetCustomers = () => {\n    Axios.get(\"/Customers/GetCustomer\").then((response) => {\n      setCustomers(response.data);\n    });\n  };\n  const GetProducts = () => {\n    Axios.get(\"/Products/GetProduct\").then((response) => {\n      setProducts(response.data);\n    });\n  };\n\n  const GetStores = () => {\n    Axios.get(\"/Stores/GetStore\").then((response) => {\n      setStore(response.data);\n    });\n  };\n\n  const handleDelete = (s) => {\n    setSale(s);\n    setOpen_Delete(true);\n  };\n\n  const handleEdit = (s) => {\n    setSale(s);\n    setOpen_Edit(true);\n  };\n\n  return (\n    <div>\n      <Create_SalesModal\n        open={Open_Create}\n        handelModal={(value) => setOpen_Create(value)}\n      />\n      <Delete_SaleModal\n        open={Open_Delete}\n        handelModal={(value) => setOpen_Delete(value)}\n        Sale={Sale}\n      />\n\n      <Edit_SaleModal\n        open={Open_Edit}\n        handelModal={(value) => setOpen_Edit(value)}\n        Sale={Sale}\n      />\n      <h1>Sales Table</h1>\n      <Button primary onClick={() => setOpen_Create(true)}>\n        New Sale\n      </Button>\n\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Customer</Table.HeaderCell>\n            <Table.HeaderCell>Product</Table.HeaderCell>\n            <Table.HeaderCell>Store</Table.HeaderCell>\n            <Table.HeaderCell>Date Sold</Table.HeaderCell>\n            <Table.HeaderCell>Action</Table.HeaderCell>\n            <Table.HeaderCell>Action</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {Sales.map((s) => {\n            return ( \n              <Table.Row>\n                {Customers.map((c) => {\n                  if (c.id===s.customerId) {\n                    return (<Table.Cell>{c.name} </Table.Cell>);\n                  }\n                })}\n\n                {Products.map((p) => {\n                  if (p.id===s.productId) {\n                    return (<Table.Cell>{p.name} </Table.Cell>);\n                  }\n                })}\n\n                {Store.map((st) => {\n                  if (st.id===s.storeId) {\n                    return (<Table.Cell>{st.name} </Table.Cell>);\n                  }\n                })}\n\n                <Table.Cell>{dateFormat(s.dateSold,\"mmmm dS, yyyy\")}</Table.Cell>\n\n                <Table.Cell>\n                  <Button\n                    style={{ backgroundColor: \"olive\" }}\n                    positive\n                    onClick={() => handleEdit(s)}\n                  >\n                    <Icon name=\"edit\" />\n                    Edit\n                  </Button>\n                </Table.Cell>\n                <Table.Cell>\n                  <Button\n                    style={{ backgroundColor: \"red\" }}\n                    positive\n                    onClick={() => handleDelete(s)}\n                  >\n                    <Icon name=\"delete\" />\n                    Delete\n                  </Button>\n                </Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\nexport default Sale;\n","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Nav_Menu.jsx",[],"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Delete_CustomerModal.jsx",["123","124"],"import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Modal } from \"semantic-ui-react\";\n\n\nconst Delete_CustomerModal = (props) => {\n  const { open, handelModal, Customer } = props;\n\n\n  const DeleteCustomer = (Id, index) => {\n    Axios.delete(\"/Customers/DeleteCustomer/ \" + Id)\n      .then((response) => {\n        console.log(`Customer ${response.data.name} deleted succesfully`);\n        handelModal(false);\n      })\n      .catch((error) => {\n        alert(`Customer Already exist in the Sales Database. Please clear the associated sales before trying again.`);\n      });\n  };\n\n  if (Customer) {\n    return (\n      <Modal open={open}>\n        <Modal.Header>Delete Customer</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>Are you Sure?</label>\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            color=\"black\"\n            onClick={() => {\n              return handelModal(false);\n            }}\n          >\n            Cancel\n          </Button>\n          <Button color=\"red\" onClick={() => DeleteCustomer(Customer.id)}>\n            Delete\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nexport default Delete_CustomerModal;\n","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Create_CustomerModal.jsx",["125"],"import Axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Button, Form, Modal,Message } from \"semantic-ui-react\";\n\nconst Create_CustomerModal = (props) => {\n  const { open, handelModal } = props;\n  const [name, setname] = useState();\n  const [address, setaddress] = useState();\n\n  const handleChange = (e, field) => {\n    switch (field) {\n      case \"name\":\n        console.log(e.target.value);\n        setname(e.target.value);\n        break;\n      case \"address\":\n        console.log(e.target.value);\n        setaddress(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const CreateCustomer = () => {\n\n    if(name != null && address != null){\n\n      Axios.post(\"/Customers/PostCustomer\", {\n        Name: name,\n        Address: address,\n      })\n      .then((response) => {\n        handelModal(false);\n      })\n      .catch((error) => {\n        console.log(\"Fail to add new Customer. Error:\" + error);\n      });\n    } else {\n    }\n  };\n  \n\n  return (\n    <Modal open={open}>\n      <Modal.Header>Create Customer</Modal.Header>\n      <Modal.Content>\n        <Form>\n          <Form.Field>\n            <label>Name</label>\n            <input\n              placeholder=\"Enter name here\"\n              onChange={(event) => handleChange(event, \"name\")}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Address</label>\n            <input\n              placeholder=\"Enter Address here\"\n              onChange={(event) => handleChange(event, \"address\")}\n            />\n          </Form.Field>\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          color=\"red\"\n          onClick={() => {\n            return handelModal(false);\n          }}\n        >\n          Cancel\n        </Button>\n        <Button color=\"green\" onClick={CreateCustomer}>\n          Submit\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default Create_CustomerModal;\n","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Edit_CustomerModal.jsx",[],"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Create_StoreModal.jsx",[],"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Delete_ProductModal.jsx",[],"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Create_ProductModal.jsx",[],"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Edit_StoreModal.jsx",[],"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Edit_ProductModal.jsx",[],"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Delete_StoreModal.jsx",[],"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Create_SaleModal.jsx",["126","127","128","129"],"import Axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, Modal } from \"semantic-ui-react\";\nimport Select from \"react-select\";\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\n\n\nconst Create_SaleModal = (props) => {\n  const { open, handelModal } = props;\n  const [Customers, setCustomers] = useState([]);\n  const [Cust_Selection, setCust_Selection] = useState([]);\n  const [Customer_name, setCustomer_name] = useState();\n  const [Customer_Id, setCustomer_Id] = useState();\n\n  const [Products, setProducts] = useState([]);\n  const [Product_selection, setProduct_selection] = useState([]);\n  const [Product_name, setProduct_name] = useState();\n  const [Product_Id, setProduct_Id] = useState();\n\n  const [Store, setStore] = useState([]);\n  const [Store_selection, setStore_selection] = useState([]);\n  const [Store_name, setStore_name] = useState();\n  const [Store_Id, setStore_Id] = useState();\n\n  const [currentDate, setNewDate] = useState(null);\n\n  useEffect(() => {\n    if (Customers) {\n      GetCustomers();\n      GetProducts();\n      GetStores();\n    }\n  }, [Customers]);\n\n  const GetCustomers = () => {\n    Axios.get(\"/Customers/GetCustomer\").then((response) => {\n      setCustomers(response.data);\n      const options = Customers.map((d) => ({\n        value: d.id,\n        label: d.name,\n      }));\n\n      setCust_Selection(options);\n    });\n  };\n\n  const GetProducts = () => {\n    Axios.get(\"/Products/GetProduct\").then((response) => {\n      setProducts(response.data);\n\n      const Product_options = Products.map((d) => ({\n        value: d.id,\n        label: d.name,\n      }));\n\n      setProduct_selection(Product_options);\n    });\n  };\n\n  const GetStores = () => {\n    Axios.get(\"/Stores/GetStore\").then((response) => {\n      setStore(response.data);\n\n      const Store_options = Store.map((d) => ({\n        value: d.id,\n        label: d.name,\n      }));\n\n      setStore_selection(Store_options);\n    });\n  };\n\n  const handleDateChange = (event, data) => {\n    setNewDate(data.value);\n\n  };\n  const handleChange = (e, Field) => {\n    switch (Field) {\n      case \"Customer\":\n        setCustomer_name(e.label);\n        setCustomer_Id(e.value);\n\n        break;\n\n      case \"Product\":\n        setProduct_name(e.label);\n        setProduct_Id(e.value);\n        break;\n\n      case \"Store\":\n        setStore_name(e.label);\n        setStore_Id(e.value);\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const CreateSale = () => {\n    if (Customer_Id !=null && Product_Id !=null && Store_Id !=null){\n\n    Axios.post(\"/Sales/PostSales\", {\n      customerId: Customer_Id,\n      productId: Product_Id,\n      storeId: Store_Id,\n      dateSold: currentDate,\n    })\n      .then((response) => {\n        handelModal(false);\n      })\n      .catch((error) => {\n        console.log(\"Error:\" + error);\n      });\n    }else {\n      console.log('All fields must be filled');\n    }  };\n\n  return (\n    <div>\n      <Modal open={open}>\n        <Modal.Header>Create Sales</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>Date</label>\n              <SemanticDatepicker onChange={handleDateChange} />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Customer</label>\n              <Select\n                options={Cust_Selection}\n                onChange={(event) => {\n                  return handleChange(event, \"Customer\");\n                }}\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Product</label>\n              <Select\n                options={Product_selection}\n                onChange={(event) => {\n                  return handleChange(event, \"Product\");\n                }}\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Store</label>\n              <Select\n                options={Store_selection}\n                onChange={(event) => {\n                  return handleChange(event, \"Store\");\n                }}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            color=\"black\"\n            onClick={() => {\n              return handelModal(false);\n            }}\n          >\n            Cancel\n          </Button>\n          <Button color=\"green\" onClick={CreateSale}>\n            Create\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Create_SaleModal;\n","C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Edit_SaleModal.jsx",["130","131","132","133","134","135","136","137"],"import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Modal, Message } from \"semantic-ui-react\";\nimport Select from \"react-select\";\n\nconst Edit_SaleModal = (props) => {\n  const { open, handelModal, Sale } = props;\n\n  const [currentDate, setNewDate] = useState(null);\n\n  const [Customer_Id, setCustomer_Id] = useState();\n  const [Customer_name, setCustomer_name] = useState();\n  const [Customers, setCustomers] = useState([]);\n  const [Cust_Selection, setCust_Selection] = useState([]);\n\n  const [Products, setProducts] = useState([]);\n  const [Product_selection, setProduct_selection] = useState([]);\n  const [Product_name, setProduct_name] = useState();\n  const [Product_Id, setProduct_Id] = useState();\n\n  const [Store, setStore] = useState([]);\n  const [Store_selection, setStore_selection] = useState([]);\n  const [Store_name, setStore_name] = useState();\n  const [Store_Id, setStore_Id] = useState();\n\n  useEffect(() => {\n    if (Sale != null && Customers != null) {\n      setNewDate(Sale.dateSold);\n      setCustomer_Id(Sale.customerId);\n      setProduct_Id(Sale.productId);\n      setStore_Id(Sale.storeId);\n      GetCustomers();\n      GetProducts();\n      GetStores();\n    }\n  }, [Sale],[Customers]);\n\n  const GetCustomers = () => {\n    Axios.get(\"/Customers/GetCustomer\").then((response) => {\n      setCustomers(response.data);\n      const options = Customers.map((d) => ({\n        value: d.id,\n        label: d.name,\n      }));\n      setCust_Selection(options);\n    });\n  };\n\n  const GetProducts = () => {\n    Axios.get(\"/Products/GetProduct\").then((response) => {\n      setProducts(response.data);\n\n      const Product_options = Products.map((d) => ({\n        value: d.id,\n        label: d.name,\n      }));\n\n      setProduct_selection(Product_options);\n    });\n  };\n\n  const GetStores = () => {\n    Axios.get(\"/Stores/GetStore\").then((response) => {\n      setStore(response.data);\n\n      const Store_options = Store.map((d) => ({\n        value: d.id,\n        label: d.name,\n      }));\n\n      setStore_selection(Store_options);\n    });\n  };\n\n  const handleChange = (e, Field) => {\n    switch (Field) {\n      case \"Date\":\n        setNewDate(e.data);\n\n        break;\n\n      case \"Customer\":\n        setCustomer_name(e.label);\n        setCustomer_Id(e.value);\n\n        break;\n\n      case \"Product\":\n        setProduct_name(e.label);\n        setProduct_Id(e.value);\n        break;\n\n      case \"Store\":\n        setStore_name(e.label);\n        setStore_Id(e.value);\n\n        break;\n\n      default:\n        break;\n    }\n  };\n  const EditSale = (id) => {\n    if (Customer_Id != null && Product_Id != null && Store_Id != null) {\n      Axios.put(\"/Sales/PutSales/\" + Sale.id, {\n        id: id,\n        customerId: Customer_Id,\n        productId: Product_Id,\n        storeId: Store_Id,\n        dateSold: currentDate,\n      })\n        .then((response) => {\n          handelModal(false);\n        })\n        .catch((error) => {\n          console.log(` Failed to Update Error:` + error);\n        });\n    } else {\n    }\n  };\n\n  if (Sale) {\n    return (\n      <Modal open={open}>\n        <Modal.Header>Update Sale</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>Date</label>\n              <input\n                placeholder=\"\"\n                type=\"date\"\n                onChange={(event) => {\n                  return handleChange(event, \"Date\");\n                }}\n              />\n            </Form.Field>\n\n            <Form.Field>\n            {Customers.map((c) => {\n              if (c.id === Customer_Id) {\n                return(\n                  <Form.Field>\n                  <label>Customer</label>\n                  <Select\n                    placeholder={c.name}\n                    options={Cust_Selection}\n                    onChange={(event) => {\n                      return handleChange(event, \"Customer\");\n                    }}\n                  />\n                  </Form.Field>\n                );\n              }\n            })}\n            </Form.Field>\n            <Form.Field>\n            {Products.map((p) => {\n              if (p.id === Product_Id) {\n                return(\n                  <Form.Field>\n                  <label>Product</label>\n                  <Select\n                    placeholder={p.name}\n                    options={Product_selection}\n                    onChange={(event) => {\n                      return handleChange(event, \"Product\");\n                    }}\n                  />\n                  </Form.Field>\n                );\n              }\n            })}\n            </Form.Field>\n                \n           \n            <Form.Field>\n            {Store.map((st) => {\n              if (st.id === Store_Id) {\n                return(\n                  <Form.Field>\n                  \n                  <label>Store</label>\n                  <Select\n                  placeholder={st.name}\n                  options={Store_selection}\n                  onChange={(event) => {\n                    return handleChange(event, \"Store\");\n                  }}\n                  /> \n                  </Form.Field>\n                  \n                  );\n                }\n            })}\n               \n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            color=\"red\"\n            onClick={() => {\n              return handelModal(false);\n            }}\n          >\n            Cancel\n          </Button>\n          <Button color=\"green\" onClick={() => EditSale(Sale.id)}>\n            Submit\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nexport default Edit_SaleModal;\n",["138","139","140"],"C:\\Users\\tatla\\Desktop\\Project_Talent_1-master\\Project_Talent_1-master\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Delete_SaleModal.jsx",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":11,"column":9,"nodeType":"149","endLine":11,"endColumn":21},{"ruleId":"147","severity":1,"message":"150","line":44,"column":7,"nodeType":"149","endLine":47,"endColumn":9},{"ruleId":"147","severity":1,"message":"151","line":48,"column":7,"nodeType":"149","endLine":52,"endColumn":9},{"ruleId":"147","severity":1,"message":"152","line":53,"column":7,"nodeType":"149","endLine":57,"endColumn":9},{"ruleId":"153","severity":1,"message":"154","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"157","line":42,"column":7,"nodeType":"149","endLine":45,"endColumn":9},{"ruleId":"147","severity":1,"message":"158","line":46,"column":7,"nodeType":"149","endLine":50,"endColumn":9},{"ruleId":"147","severity":1,"message":"159","line":51,"column":7,"nodeType":"149","endLine":55,"endColumn":9},{"ruleId":"147","severity":1,"message":"160","line":44,"column":7,"nodeType":"149","endLine":48,"endColumn":9},{"ruleId":"147","severity":1,"message":"161","line":50,"column":7,"nodeType":"149","endLine":53,"endColumn":9},{"ruleId":"147","severity":1,"message":"162","line":54,"column":7,"nodeType":"149","endLine":58,"endColumn":9},{"ruleId":"153","severity":1,"message":"163","line":3,"column":31,"nodeType":"155","messageId":"156","endLine":3,"endColumn":39},{"ruleId":"147","severity":1,"message":"164","line":65,"column":7,"nodeType":"149","endLine":68,"endColumn":9},{"ruleId":"147","severity":1,"message":"165","line":69,"column":7,"nodeType":"149","endLine":73,"endColumn":9},{"ruleId":"147","severity":1,"message":"166","line":75,"column":7,"nodeType":"149","endLine":79,"endColumn":9},{"ruleId":"167","severity":1,"message":"168","line":101,"column":36,"nodeType":"169","messageId":"170","endLine":101,"endColumn":38},{"ruleId":"167","severity":1,"message":"168","line":107,"column":35,"nodeType":"169","messageId":"170","endLine":107,"endColumn":37},{"ruleId":"167","severity":1,"message":"168","line":113,"column":33,"nodeType":"169","messageId":"170","endLine":113,"endColumn":35},{"ruleId":"153","severity":1,"message":"171","line":2,"column":17,"nodeType":"155","messageId":"156","endLine":2,"endColumn":26},{"ruleId":"153","severity":1,"message":"172","line":2,"column":28,"nodeType":"155","messageId":"156","endLine":2,"endColumn":36},{"ruleId":"153","severity":1,"message":"173","line":3,"column":30,"nodeType":"155","messageId":"156","endLine":3,"endColumn":37},{"ruleId":"153","severity":1,"message":"174","line":13,"column":10,"nodeType":"155","messageId":"156","endLine":13,"endColumn":23},{"ruleId":"153","severity":1,"message":"175","line":18,"column":10,"nodeType":"155","messageId":"156","endLine":18,"endColumn":22},{"ruleId":"153","severity":1,"message":"176","line":23,"column":10,"nodeType":"155","messageId":"156","endLine":23,"endColumn":20},{"ruleId":"177","severity":1,"message":"178","line":34,"column":6,"nodeType":"179","endLine":34,"endColumn":17,"suggestions":"180"},{"ruleId":"153","severity":1,"message":"173","line":3,"column":31,"nodeType":"155","messageId":"156","endLine":3,"endColumn":38},{"ruleId":"153","severity":1,"message":"174","line":12,"column":10,"nodeType":"155","messageId":"156","endLine":12,"endColumn":23},{"ruleId":"153","severity":1,"message":"175","line":18,"column":10,"nodeType":"155","messageId":"156","endLine":18,"endColumn":22},{"ruleId":"153","severity":1,"message":"176","line":23,"column":10,"nodeType":"155","messageId":"156","endLine":23,"endColumn":20},{"ruleId":"177","severity":1,"message":"181","line":36,"column":6,"nodeType":"179","endLine":36,"endColumn":12,"suggestions":"182"},{"ruleId":"167","severity":1,"message":"168","line":140,"column":32,"nodeType":"169","messageId":"170","endLine":140,"endColumn":34},{"ruleId":"167","severity":1,"message":"168","line":158,"column":31,"nodeType":"169","messageId":"170","endLine":158,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":178,"column":29,"nodeType":"169","messageId":"170","endLine":178,"endColumn":31},{"ruleId":"141","replacedBy":"183"},{"ruleId":"143","replacedBy":"184"},{"ruleId":"145","replacedBy":"185"},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"jsx-a11y/accessible-emoji",[],"react/jsx-pascal-case","Imported JSX component Nav_Menu must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Create_CustomerModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Edit_CustomerModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Del_CustomerModal must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","Imported JSX component Create_StoreModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Edit_StoreModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Delete_StoreModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Edit_ProductModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Create_ProductModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Delete_ProductModal must be in PascalCase or SCREAMING_SNAKE_CASE","'Dropdown' is defined but never used.","Imported JSX component Create_SalesModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Delete_SaleModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Edit_SaleModal must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'useState' is defined but never used.","'Message' is defined but never used.","'Customer_name' is assigned a value but never used.","'Product_name' is assigned a value but never used.","'Store_name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetCustomers', 'GetProducts', and 'GetStores'. Either include them or remove the dependency array.","ArrayExpression",["188"],"React Hook useEffect has missing dependencies: 'Customers', 'GetCustomers', 'GetProducts', and 'GetStores'. Either include them or remove the dependency array.",["189"],["186"],["187"],[],"no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [Customers, GetCustomers, GetProducts, GetStores]",{"range":"194","text":"195"},"Update the dependencies array to be: [Customers, GetCustomers, GetProducts, GetStores, Sale]",{"range":"196","text":"197"},[1199,1210],"[Customers, GetCustomers, GetProducts, GetStores]",[1235,1241],"[Customers, GetCustomers, GetProducts, GetStores, Sale]"]